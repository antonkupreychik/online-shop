version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      - POSTGRES_PASSWORD=anton
      - POSTGRES_USER=anton
      - POSTGRES_DB=online-shop
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always
  gateway-service:
    build:
      context: ./gateway-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - keycloak
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 5
        window: 60s
  scheduler-service:
    build:
      context: ./scheduler-service
      dockerfile: Dockerfile
    ports:
      - "9006:9006"
    depends_on:
      - postgres
    restart: on-failure
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - DAILY_STATS=*/15 * * * * *
  statistic-service:
    build:
      context: ./statistic-service
      dockerfile: Dockerfile
    ports:
      - "9005:9005"
    depends_on:
      - postgres
    restart: on-failure
    environment:
      - DATABASE_URL=jdbc:postgresql://postgres:5432/online-shop
      - DATABASE_USER=anton
      - DATABASE_PASSWORD=anton
      - DEFAULT_SCHEMA=statistics_management
      - LIQUIBASE_SCHEMA=statistics_management_migrations
      - KEYCLOAK_JWK_URL=http://localhost:8081/realms/demo/protocol/openid-connect/certs
      - BOOTSTRAP_SERVERS=kafka:9092
      - PORT=9005
  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    ports:
      - "9003:9003"
    depends_on:
      - postgres
    restart: always
    environment:
      - DATABASE_URL=jdbc:postgresql://postgres:5432/online-shop
      - DATABASE_USER=anton
      - DATABASE_PASSWORD=anton
      - DEFAULT_SCHEMA=order_management
      - LIQUIBASE_SCHEMA=order_management_migrations
      - KEYCLOAK_JWK_URL=http://keycloak:8081/realms/demo/protocol/openid-connect/certs
      - BOOTSTRAP_SERVERS=kafka:9092
      - PORT=9003
  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    ports:
      - "9002:9002"
    depends_on:
      - postgres
    restart: always
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "9001:9001"
    depends_on:
      - postgres
    restart: always
  redis-stack:
    container_name: redis-stack
    ports:
      - "6379:6379"
      - "8001:8001"
    image: redis/redis-stack:latest
  rates-service:
    build:
      context: ./rates-service
      dockerfile: Dockerfile
    ports:
      - "9009:9009"
    depends_on:
      - redis-stack
    restart: always
    environment:
      - REDIS_HOST=redis-stack
  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafdrop:
    image: obsidiandynamics/kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "localhost:9092"
    depends_on:
      - kafka
  keycloak:
    container_name: keycloak
    ports:
      - "8081:8080"
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    image: quay.io/keycloak/keycloak:23.0.7
    command: start-dev
    restart: always

volumes:
  postgres_data:

